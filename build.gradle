plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.5'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.shop'
version = '0.0.1-SNAPSHOT'
description = 'Internet Shop EasyBuy'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    mapstructVersion = '1.6.3'
    lombokVersion = '1.18.38'
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
    implementation 'org.postgresql:r2dbc-postgresql'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation "org.springframework.boot:spring-boot-starter-validation"
    implementation 'org.liquibase:liquibase-core'
    implementation("org.mapstruct:mapstruct:$mapstructVersion")
    implementation 'org.postgresql:postgresql'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor "org.projectlombok:lombok:$lombokVersion"
    annotationProcessor "org.mapstruct:mapstruct-processor:$mapstructVersion"

    testCompileOnly "org.projectlombok:lombok:$lombokVersion"
    testAnnotationProcessor "org.projectlombok:lombok:$lombokVersion"
    testAnnotationProcessor "org.mapstruct:mapstruct-processor:$mapstructVersion"
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.testcontainers:testcontainers'
    testImplementation 'org.testcontainers:postgresql'
}

test {
    useJUnitPlatform()

    jvmArgs += ["-XX:+EnableDynamicAgentLoading"]

    testLogging {
        events("passed", "skipped", "failed")
        exceptionFormat = "full"

        lifecycle {
            showStandardStreams = true
        }
    }

    afterSuite { desc, result ->
        if (!desc.parent) {
            println "--------------------------------------------------"
            println "Тестов всего: ${result.testCount}"
            println "Успешно:      ${result.successfulTestCount}"
            println "Провалено:    ${result.failedTestCount}"
            println "Пропущено:    ${result.skippedTestCount}"
            println "Результат:    ${result.resultType}"
            println "--------------------------------------------------"
        }
    }
}
