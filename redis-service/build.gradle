import org.openapitools.generator.gradle.plugin.tasks.GenerateTask

plugins {
    id 'java'
    id 'org.springframework.boot'
    id 'io.spring.dependency-management'
    id 'org.openapi.generator'
}

description = 'Internet Shop EasyBuy'

dependencies {
    implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:${springDocVersion}" exclude group: "org.apache.commons", module: "commons-lang3"
    implementation 'org.springframework.boot:spring-boot-starter-data-redis-reactive'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'

    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'
}

tasks.register("openApiGeneratePayment", GenerateTask) {
    generatorName.set("spring")
    inputSpec.set(file("$projectDir/src/main/resources/openapi/payment-spec.yaml").toURI().toString())
    outputDir.set("$projectDir/build/generated/payment")
    apiPackage.set("com.shop.easybuy.api.payment")
    modelPackage.set("com.shop.easybuy.model.payment")
    configOptions.set([
            interfaceOnly     : "true",
            useBeanValidation : "true",
            library           : "spring-boot",
            reactive          : "true",
            useTags           : "true",
            dateLibrary       : "java8",
            useJakartaEe      : "true",
            useSpringBoot3    : "true"
    ])
}

tasks.register("openApiGenerateCache", GenerateTask) {
    generatorName.set("spring")
    inputSpec.set(file("$projectDir/src/main/resources/openapi/cache-spec.yaml").toURI().toString())
    outputDir.set("$projectDir/build/generated/cache")
    apiPackage.set("com.shop.easybuy.api.cache")
    modelPackage.set("com.shop.easybuy.model.cache")
    configOptions.set([
            interfaceOnly     : "true",
            useBeanValidation : "true",
            library           : "spring-boot",
            reactive          : "true",
            useTags           : "true",
            dateLibrary       : "java8",
            useJakartaEe      : "true",
            useSpringBoot3    : "true"
    ])
}

sourceSets {
    main {
        java {
            srcDir("$buildDir/generated/payment/src/main/java")
            srcDir("$buildDir/generated/cache/src/main/java")
        }
    }
}

afterEvaluate {
    tasks.named('compileJava') {
        dependsOn tasks.named('openApiGeneratePayment')
        dependsOn tasks.named('openApiGenerateCache')
    }
}