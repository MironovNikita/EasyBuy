spring.application.name=EasyBuy
spring.webflux.base-path=/easy-buy

spring.config.import=classpath:application-secret.properties
spring.sql.init.mode=always

#R2DBC
spring.r2dbc.url=${DB_R2DBC_URL}
spring.r2dbc.username=${DB_USERNAME}
spring.r2dbc.password=${DB_PASSWORD}

logging.pattern.console=%d{yyyy-MM-dd - HH:mm:ss.SSS (XXX)} %highlight(%5p) %clr(${PID}){magenta} ---> [%clr(%t){green}] %clr(%c{36}){cyan} : %m%n
spring.output.ansi.enabled=always

# max file upload size
spring.webflux.multipart.max-in-memory-size=10MB
# max request size
spring.webflux.multipart.max-disk-usage-per-part=20MB

spring.liquibase.enabled=true
spring.liquibase.change-log=classpath:/db/changelog/liquibase/db.changelog-master.xml
spring.liquibase.url=${DB_JDBC_URL}
spring.liquibase.user=${DB_USERNAME}
spring.liquibase.password=${DB_PASSWORD}

items.row.size=5

cache.time.to.live=3
spring.data.redis.host=${REDIS_HOST:localhost}
spring.data.redis.port=${REDIS_PORT:6379}
base.client.redis.url=${REDIS_SERVICE_URL:http://localhost:8081}

#security
secret.encryption.value=secret987123654

#oauth2
# Server address for getting token
spring.security.oauth2.client.provider.keycloak.issuer-uri=http://localhost:8082/realms/easybuy
spring.security.oauth2.client.registration.easybuy.provider=keycloak
spring.security.oauth2.client.registration.easybuy.authorization-grant-type=client_credentials
spring.security.oauth2.client.registration.easybuy.client-id=shop
spring.security.oauth2.client.registration.easybuy.client-secret=${KEYCLOAK_CLIENT_SECRET}
spring.security.oauth2.client.registration.easybuy.scope=profile
spring.security.oauth2.client.registration.easybuy.client-authentication-method=client_secret_post

oauth2.default.registration.id=easybuy
